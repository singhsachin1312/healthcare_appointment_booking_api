c
appointment_params["appointment_start_time"].to_time >= Time.now
Time.now
appointment_params["appointment_start_time"].to_time
appointment_params["appointment_start_time"].to_datetime
appointment_params["appointment_start_time"].to_date
DateTime.now
appointment_params["appointment_start_time"].to_datetime
appointment_params["appointment_start_time"].to_datetime.utc >= DateTime.now
c
appointment_params["appointment_start_time"].to_datetime.utc > DateTime.now
appointment_params["appointment_start_time"].to_datetime.utc
DateTime.now
DateTime.now.utc
DateTime.now.ist
DateTime.now.utc
DateTime.now
appointment_params["appointment_start_time"].to_datetime
DateTime.now
appointment_params["appointment_start_time"].to_datetime.utc
DateTime.now.utc
DateTime.now
appointment_params["appointment_start_time"].to_datetime
c
appointment_params["appointment_start_time"].to_datetime > DateTime.now && appointment_params["appointment_end_time"].to_datetime > DateTime.now
appointment_params["appointment_start_time"].to_datetime < DateTime.now && appointment_params["appointment_end_time"].to_datetime < DateTime.now
c
appointment_params["appointment_start_time"].to_datetime < DateTime.now
appointment_params["appointment_start_time"].to_datetime > DateTime.now
DateTime.now
appointment_params["appointment_start_time"].to_datetime 
appointment_params["appointment_start_time"].to_datetime
DateTime.now
appointment_params["appointment_start_time"].to_datetime > DateTime.now
appointment_params["appointment_start_time"].to_datetime
c
arr.include?(current_datetime.to_datetime)
current_datetime.to_datetime
c
current_datetime.to_datetime
c
current_datetime.to_datetime
c
current_datetime.to_datetime
c
current_datetime.to_datetime
c
current_datetime.to_datetime
c
current_datetime.to_datetime
c
current_datetime.to_datetime
c
arr
current_datetime.to_datetimearr
current_datetime.to_datetime
arr.include?(current_datetime.to_datetime)
arr
carr
c
 availablity.appointments
 availablity = professional_availability_days.first
availablity.appointments.map{|x| x.appointment_start_time.to_datetime}
professional_availability_days
c
arr
c
availablity
arr
c
arr.include?(current_datetime.to_datetime)
current_datetime.to_datetime
c
current_datetime.to_datetime
arr.include?(current_datetime.to_datetime)
current_datetime.to_datetime
current_datetime.to_date
arr.include?(current_datetime.to_date)
arr.include?(current_datetime)
arr = availablity.appointments.map{|x| x.appointment_start_time.to_datetime}
availablity.appointments.map{|x| x.appointment_start_time.to_datetime}
availablity.appointments.map{|x| x.appointment_start_time.to_date}
arr.include?(current_datetime)
arrarr.include?(current_datetime)
current_datetime
availablity.appointments.map{|x| x.appointment_start_time}
arr
c
availablity.appointments.map{|x| x.appointment_start_time}
availablity.appointments.map{|x| x.appointment_start_time.strftime('%H:%M:%S')}
current_datetime
 arr.include?(current_datetime.strftime('%H:%M:%S'))
current_datetime.strftime('%H:%M:%S')
arr
c
arr.include?(current_datetime.strftime('%H:%M:%S'))
c
arr.include?(current_datetime.strftime('%H:%M:%S'))
arr = availablity.appointments.map{|x| x.appointment_start_time.strftime('%H:%M:%S')}
arr.include?(current_datetime.strftime('%H:%M:%S'))
current_datetime.strftime('%H:%M:%S')
availablity.appointments.map{|x| x.appointment_start_time.strftime('%H:%M:%S')}
availablity.appointments.pluck(:appointment_start_time.strftime('%H:%M:%S'))
availablity.appointments.pluck(:appointment_start_time)
availablity.appointments
c
appointment_params["appointment_start_time"]
 healthcare_professional.professional_availabilities.count
 healthcare_professional.professional_availabilities
days
all_appointments = days.appointments.where(appointment_start_time: appointment_params["appointment_start_time"].to_datetime, appointment_end_time: appointment_params["appointment_end_time"].to_datetime, status: 'booked')
c
appointment.appointment_start_time > DateTime.now + 24.hours
c
appointment.appointment_start_time
DateTime.now
DateTime.no
appointment.appointment_start_time
appointment.appointment_start_time < DateTime.now - 24.hours
appointment.appointment_start_time - 24.hours < DateTime.now
appointment.appointment_start_time - 24.hours
appointment.appointment_start_time
appointment.appointment_start_time < DateTime.now
appointment.appointment_start_time < Datetime.now
appointment.appointment_start_time
appointment
c
availablity.appointments
availablity
c
days.appointments.where(appointment_start_time: appointment_params["appointment_start_time"].to_datetime, appointment_end_time: appointment_params["appointment_end_time"].to_datetime)c
days.appointments.where(appointment_start_time: appointment_params["appointment_start_time"].to_datetime, appointment_end_time: appointment_params["appointment_end_time"].to_datetime)
days.appointments.where(appointment_start_time: appointment_params["appointment_start_time"].to_datetime)
appointment_params["appointment_start_time"].to_datetime
appointment_params["appointment_start_time"].to_date
appointment.appointment_end_time.to_datetime
appointment.appointment_start_time.to_datetime
appointment.appointment_start_time.to_date
appointment.appointment_start_time
appointment
c
 days.appointments.select{|x| x.appointment_start_time}
 days.appointments
 days.appointments.last.appointment_start_time
 days.appointments.appointment_start_time
 days.appointments
c
days.appointments
days
c
days
c
days.healthcare_professional
days
appointment_params["appointment_start_time"].to_datetime
appointment_params["appointment_start_time"].to_date
appointment_params["appointment_start_time"]
days.available_to
days.available_from
days
appointment_params["appointment_start_time"].to_date.strftime("%A")
healthcare_professional.professional_availabilities
healthcare_professional.professional_availabilities.count
healthcare_professional.professional_availabilities
Appointment.where(healthcare_professional_id: 1)
days
c
Appointment.where(healthcare_professional_id: 1, appointment_start_time: "2023-12-12 10:00:00.000000000 +0000", appointment_end_time: "2023-12-12 10:30:00.000000000 +0000")
Appointment.where(healthcare_professional_id: 1).last
Appointment.where(healthcare_professional_id: 1).count
Appointment.where(healthcare_professional_id: 1)
days
professional_availability_days = healthcare_professional.professional_availabilities.where(day: appointment_params["appointment_start_time"].to_date.strftime("%A"))
    healthcare_professional = HealthcareProfessional.find_by(id: appointment_params["healthcare_professional_id"])
appointment_params
params
days
c
professional_availability_days = healthcare_professional.professional_availabilities.where(day: params["date"].to_date.strftime("%A")).count
professional_availability_days = healthcare_professional.professional_availabilities.where(day: params["date"].to_date.strftime("%A"))
availablity
c
availablity
c
availablity
c
availablity
c
cc
c
index
time
index
c
arr[0].strftime("%H:%M")
arr[0]
arr
c
Time.at(time).utc
c
Time.at(time).utc
c
x
Time.at(time).utc
c
 Time.at(time).utc
 Time.at(time)
c
cc
c
 Time.at(time)
time
c
 Time.at(time)
time
c
end
    puts Time.at(time)
(Time.now.to_i..1.day.from_now.to_i).step(30.minutes).each do |time|
    professional_availability_days = health.professional_availabilities.where(day: params["date"].to_date.strftime("%A"))
    professional_availability_days = healthcare_professional.professional_availabilities.where(day: params["date"].to_date.strftime("%A"))
params["date"].to_date.strftime("%A")
params["date"].strftime("%A")
params["date"]
params
health
  health = HealthcareProfessional.find_by(id: params[:id])
c
days.available_to.strftime("%H:%M")
days.available_from.strftime("%H:%M")
days.available_from.strftime("%H")
days.available_from.strftime("%h")
days.available_from.to_time
days.available_from
days
c
appointment_params["appointment_start_time"].to_date.strftime("%A")
appointment_params["appointment_start_time"].to_date
days
daya
c
"12/12/2023 10 AM".to_date
"12/11/2023 10 AM".to_date
"12/12/2023 10 AM".to_date
"12/12/2023 10 AM"
appointment_params["appointment_start_time"].to_date
appointment_params["appointment_start_time"]
appointment_params
days
c
healthcare_professional.professional_availabilities.where(day: Date.today.strftime("%A"))
Date.today.strftime("%A")
Date.today.strftime("%S")
Date.today.strftime("%M")
Date.today.strftime("%N")
Date.today.strftime("%D")
